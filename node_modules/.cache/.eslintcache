[{"E:\\surbhi_office\\employee_crud\\src\\index.js":"1","E:\\surbhi_office\\employee_crud\\src\\App.js":"2","E:\\surbhi_office\\employee_crud\\src\\Components\\NavBar.jsx":"3","E:\\surbhi_office\\employee_crud\\src\\Components\\CodeForInterview.jsx":"4","E:\\surbhi_office\\employee_crud\\src\\Components\\AddUser.jsx":"5","E:\\surbhi_office\\employee_crud\\src\\Components\\Allusers.jsx":"6","E:\\surbhi_office\\employee_crud\\src\\Components\\NotFound.jsx":"7","E:\\surbhi_office\\employee_crud\\src\\Service\\api.js":"8","E:\\surbhi_office\\employee_crud\\src\\Components\\EditUser.jsx":"9","E:\\surbhi_office\\employee_crud\\src\\Components\\ImageUpload.jsx":"10"},{"size":146,"mtime":1626326771394,"results":"11","hashOfConfig":"12"},{"size":891,"mtime":1626420356715,"results":"13","hashOfConfig":"12"},{"size":891,"mtime":1626420084920,"results":"14","hashOfConfig":"12"},{"size":910,"mtime":1626348066901,"results":"15","hashOfConfig":"12"},{"size":1973,"mtime":1626441426671,"results":"16","hashOfConfig":"12"},{"size":2503,"mtime":1626341875049,"results":"17","hashOfConfig":"12"},{"size":225,"mtime":1626330412470,"results":"18","hashOfConfig":"12"},{"size":492,"mtime":1626341807604,"results":"19","hashOfConfig":"12"},{"size":2230,"mtime":1626341453963,"results":"20","hashOfConfig":"12"},{"size":3126,"mtime":1626673521416,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"aoac3q",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"E:\\surbhi_office\\employee_crud\\src\\index.js",[],["45","46"],"E:\\surbhi_office\\employee_crud\\src\\App.js",[],"E:\\surbhi_office\\employee_crud\\src\\Components\\NavBar.jsx",[],"E:\\surbhi_office\\employee_crud\\src\\Components\\CodeForInterview.jsx",[],"E:\\surbhi_office\\employee_crud\\src\\Components\\AddUser.jsx",[],"E:\\surbhi_office\\employee_crud\\src\\Components\\Allusers.jsx",[],"E:\\surbhi_office\\employee_crud\\src\\Components\\NotFound.jsx",[],"E:\\surbhi_office\\employee_crud\\src\\Service\\api.js",[],"E:\\surbhi_office\\employee_crud\\src\\Components\\EditUser.jsx",["47"],"import { FormGroup,InputLabel,Input,FormControl,Button,makeStyles ,Typography} from \"@material-ui/core\";\r\nimport { useState,useEffect } from \"react\";\r\nimport { editUser,getUsers } from '../Service/api';\r\nimport { useHistory,useParams } from  'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        width:'50%',\r\n        margin:'5% 0 0 25%',\r\n        '& > *':{\r\n            marginTop:22\r\n        }\r\n    },\r\n})\r\n\r\nconst initalValues = {\r\n    name:'',\r\n    username:'',\r\n    email:'',\r\n    phone:''\r\n}\r\n\r\nconst EditUser = () => {\r\n    const [ user,setUser] = useState(initalValues);\r\n    const {name,username,email,phone} = user;\r\n    const {id} = useParams();\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n      loadUserData();  \r\n    },[]);\r\n\r\n    const loadUserData = async() =>{\r\n        const response = await getUsers(id);\r\n        setUser(response.data);\r\n    }\r\n\r\n    const onValueChange = (e) =>{\r\n        setUser({ ...user,[e.target.name]:e.target.value});\r\n    }\r\n\r\n    const editUserDetails = async () => {\r\n        await editUser(id,user);\r\n        history.push('/all');\r\n    }\r\n\r\n    return(\r\n        <FormGroup className={classes.container}>\r\n            <Typography variant=\"h5\">Edit User</Typography>\r\n            <FormControl>\r\n                <InputLabel>Name</InputLabel>\r\n                <Input onChange={(e) => onValueChange(e)} name=\"name\" value={name} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <InputLabel>UserName</InputLabel>\r\n                <Input onChange={(e) => onValueChange(e)} name=\"username\" value={username}/>\r\n            </FormControl>\r\n            <FormControl>\r\n                <InputLabel>Email</InputLabel>\r\n                <Input onChange={(e) => onValueChange(e)} name=\"email\" value={email}/>\r\n            </FormControl>\r\n            <FormControl>\r\n                <InputLabel>Phone</InputLabel>\r\n                <Input onChange={(e) => onValueChange(e)} name=\"phone\" value={phone}/>\r\n            </FormControl>\r\n            <Button variant=\"contained\" onClick={() => editUserDetails()} color=\"primary\">Add User</Button>\r\n        </FormGroup>\r\n    )\r\n}\r\n\r\nexport default EditUser;","E:\\surbhi_office\\employee_crud\\src\\Components\\ImageUpload.jsx",["48"],"import React , {useMemo,useEffect, useState} from \"react\";\r\nimport {useDropzone} from \"react-dropzone\";\r\n\r\nconst baseStyle = {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    borderWidth: 2,\r\n    borderRadius: 2,\r\n    borderColor: '#eeeeee',\r\n    borderStyle: 'dashed',\r\n    backgroundColor: '#fafafa',\r\n    color: '#bdbdbd',\r\n    outline: 'none',\r\n    transition: 'border .24s ease-in-out'\r\n  };\r\n  \r\n  const activeStyle = {\r\n    borderColor: '#2196f3'\r\n  };\r\n  \r\n  const acceptStyle = {\r\n    borderColor: '#00e676'\r\n  };\r\n  \r\n  const rejectStyle = {\r\n    borderColor: '#ff1744'\r\n  };\r\n  const thumbsContainer = {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    marginTop: 16\r\n  };\r\n  \r\n  const thumb = {\r\n    display: 'inline-flex',\r\n    borderRadius: 2,\r\n    border: '1px solid #eaeaea',\r\n    marginBottom: 8,\r\n    marginRight: 8,\r\n    width: \"auto\",\r\n    height: 300,\r\n    padding: 4,\r\n    boxSizing: 'border-box'\r\n  };\r\n  \r\n  const thumbInner = {\r\n    display: 'flex',\r\n    minWidth: 0,\r\n    overflow: 'hidden'\r\n  };\r\n  \r\n  const img = {\r\n    display: 'block',\r\n    width: 'auto',\r\n    height: '100%'\r\n  };\r\n\r\n  function ImageUpload(props) {\r\n    const [files, setFiles] = useState([]); \r\n    const {\r\n      getRootProps,\r\n      getInputProps,\r\n      isDragActive,\r\n      isDragAccept,\r\n      isDragReject,\r\n      acceptedFiles,\r\n      open\r\n    } = useDropzone({accept: 'image/*',noClick: true, noKeyboard: true, \r\n        onDrop: acceptedFiles => {\r\n        setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n          preview: URL.createObjectURL(file)\r\n        })));\r\n      }});\r\n  \r\n    const style = useMemo(() => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {})\r\n    }), [\r\n      isDragActive,\r\n      isDragReject,\r\n      isDragAccept\r\n    ]);\r\n  \r\n    const thumbs = files.map(file => (\r\n        <div style={thumb} key={file.name}>\r\n          <div style={thumbInner}>\r\n            <img\r\n              src={file.preview}\r\n              style={img}\r\n            />\r\n          </div>\r\n        </div>\r\n      ));\r\n    \r\n      useEffect(() => () => {\r\n        // Make sure to revoke the data uris to avoid memory leaks\r\n        files.forEach(file => URL.revokeObjectURL(file.preview));\r\n      }, [files]);\r\n\r\n    const filespath = acceptedFiles.map(file => (\r\n        <li key={file.path}>\r\n          {file.path} - {file.size} bytes\r\n        </li>\r\n      ));\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div {...getRootProps({style})}>\r\n          <input {...getInputProps()} />\r\n          <p>Drag 'n' drop some files here</p>\r\n          <button type=\"button\" onClick={open}>\r\n          Open File Dialog\r\n        </button>\r\n        </div>\r\n        <aside>\r\n            <h4>Files </h4>\r\n            <ul>{filespath}</ul>\r\n        </aside>\r\n        <aside style={thumbsContainer}>\r\n        {thumbs}\r\n      </aside>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  <ImageUpload />\r\nexport default ImageUpload;",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":33,"column":7,"nodeType":"55","endLine":33,"endColumn":9,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":93,"column":13,"nodeType":"59","endLine":96,"endColumn":15},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUserData'. Either include it or remove the dependency array.","ArrayExpression",["62"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [loadUserData]",{"range":"65","text":"66"},[811,813],"[loadUserData]"]