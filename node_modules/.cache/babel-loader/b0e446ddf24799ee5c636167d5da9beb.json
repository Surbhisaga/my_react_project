{"ast":null,"code":"var _jsxFileName = \"E:\\\\surbhi_office\\\\employee_crud\\\\src\\\\Components\\\\ImageUpload.jsx\";\nimport React, { useMemo, useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport UploadImage from \"./uploadFun\"; // const baseStyle = {\n//     flex: 1,\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     padding: '20px',\n//     borderWidth: 2,\n//     borderRadius: 2,\n//     borderColor: '#eeeeee',\n//     borderStyle: 'dashed',\n//     backgroundColor: '#fafafa',\n//     color: '#bdbdbd',\n//     outline: 'none',\n//     transition: 'border .24s ease-in-out'\n//   };\n//   const activeStyle = {\n//     borderColor: '#2196f3'\n//   };\n//   const acceptStyle = {\n//     borderColor: '#00e676'\n//   };\n//   const rejectStyle = {\n//     borderColor: '#ff1744'\n//   };\n//   const thumbsContainer = {\n//     display: 'flex',\n//     flexDirection: 'row',\n//     flexWrap: 'wrap',\n//     marginTop: 16\n//   };\n//   const thumb = {\n//     display: 'inline-flex',\n//     borderRadius: 2,\n//     border: '1px solid #eaeaea',\n//     marginBottom: 8,\n//     marginRight: 8,\n//     width: \"auto\",\n//     height: 300,\n//     padding: 4,\n//     boxSizing: 'border-box'\n//   };\n//   const thumbInner = {\n//     display: 'flex',\n//     minWidth: 0,\n//     overflow: 'hidden'\n//   };\n//   const img = {\n//     display: 'block',\n//     width: 'auto',\n//     height: '100%'\n//   };\n//   function ImageUpload(props) {\n//     const [files, setFiles] = useState([]); \n//     const {\n//       getRootProps,\n//       getInputProps,\n//       isDragActive,\n//       isDragAccept,\n//       isDragReject,\n//       acceptedFiles,\n//       open\n//     } = useDropzone({accept: 'image/*',noClick: true, noKeyboard: true, \n//         onDrop: acceptedFiles => {\n//         setFiles(acceptedFiles.map(file => Object.assign(file, {\n//           preview: URL.createObjectURL(file)\n//         })));\n//       }});\n//     const style = useMemo(() => ({\n//       ...baseStyle,\n//       ...(isDragActive ? activeStyle : {}),\n//       ...(isDragAccept ? acceptStyle : {}),\n//       ...(isDragReject ? rejectStyle : {})\n//     }), [\n//       isDragActive,\n//       isDragReject,\n//       isDragAccept\n//     ]);\n//     const thumbs = files.map(file => (\n//         <div style={thumb} key={file.name}>\n//           <div style={thumbInner}>\n//             <img\n//               src={file.preview}\n//               style={img}\n//             />\n//           </div>\n//         </div>\n//       ));\n//       useEffect(() => () => {\n//         // Make sure to revoke the data uris to avoid memory leaks\n//         files.forEach(file => URL.revokeObjectURL(file.preview));\n//       }, [files]);\n//     const filespath = acceptedFiles.map(file => (\n//         <li key={file.path}>\n//           {file.path} - {file.size} bytes\n//         </li>\n//       ));\n//     return (\n//       <div className=\"container\">\n//         <div {...getRootProps({style})}>\n//           <input {...getInputProps()} />\n//           <p>Drag 'n' drop some files here</p>\n//           <button type=\"button\" onClick={open}>\n//           Open File Dialog\n//         </button>\n//         </div>\n//         <aside>\n//             <h4>Files </h4>\n//             <ul>{filespath}</ul>\n//         </aside>\n//         <aside style={thumbsContainer}>\n//         {thumbs}\n//       </aside>\n//       </div>\n//     );\n//   }\n//   <ImageUpload />\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Image extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: this.props.hocname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = UploadImage(ImageUpload);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["E:/surbhi_office/employee_crud/src/Components/ImageUpload.jsx"],"names":["React","useMemo","useEffect","useState","useDropzone","UploadImage","Image","Component","render","props","hocname","ImageUpload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAkD,OAAlD;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,OAAOC,WAAP,MAAwB,aAAxoBC,SAApB,CAA6B;AAC3BC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA,6BACE;AAAA,kBAAK,KAAKC,KAAL,CAAWC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAP0B;;AAU7B,oBAAeL,WAAW,CAACM,WAAD,CAA1B","sourcesContent":["import React , {useMemo,useEffect, useState} from \"react\";\r\nimport {useDropzone} from \"react-dropzone\";\r\nimport UploadImage from \"./uploadFun\";\r\n\r\n// const baseStyle = {\r\n//     flex: 1,\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//     alignItems: 'center',\r\n//     padding: '20px',\r\n//     borderWidth: 2,\r\n//     borderRadius: 2,\r\n//     borderColor: '#eeeeee',\r\n//     borderStyle: 'dashed',\r\n//     backgroundColor: '#fafafa',\r\n//     color: '#bdbdbd',\r\n//     outline: 'none',\r\n//     transition: 'border .24s ease-in-out'\r\n//   };\r\n  \r\n//   const activeStyle = {\r\n//     borderColor: '#2196f3'\r\n//   };\r\n  \r\n//   const acceptStyle = {\r\n//     borderColor: '#00e676'\r\n//   };\r\n  \r\n//   const rejectStyle = {\r\n//     borderColor: '#ff1744'\r\n//   };\r\n//   const thumbsContainer = {\r\n//     display: 'flex',\r\n//     flexDirection: 'row',\r\n//     flexWrap: 'wrap',\r\n//     marginTop: 16\r\n//   };\r\n  \r\n//   const thumb = {\r\n//     display: 'inline-flex',\r\n//     borderRadius: 2,\r\n//     border: '1px solid #eaeaea',\r\n//     marginBottom: 8,\r\n//     marginRight: 8,\r\n//     width: \"auto\",\r\n//     height: 300,\r\n//     padding: 4,\r\n//     boxSizing: 'border-box'\r\n//   };\r\n  \r\n//   const thumbInner = {\r\n//     display: 'flex',\r\n//     minWidth: 0,\r\n//     overflow: 'hidden'\r\n//   };\r\n  \r\n//   const img = {\r\n//     display: 'block',\r\n//     width: 'auto',\r\n//     height: '100%'\r\n//   };\r\n\r\n//   function ImageUpload(props) {\r\n//     const [files, setFiles] = useState([]); \r\n//     const {\r\n//       getRootProps,\r\n//       getInputProps,\r\n//       isDragActive,\r\n//       isDragAccept,\r\n//       isDragReject,\r\n//       acceptedFiles,\r\n//       open\r\n//     } = useDropzone({accept: 'image/*',noClick: true, noKeyboard: true, \r\n//         onDrop: acceptedFiles => {\r\n//         setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n//           preview: URL.createObjectURL(file)\r\n//         })));\r\n//       }});\r\n  \r\n//     const style = useMemo(() => ({\r\n//       ...baseStyle,\r\n//       ...(isDragActive ? activeStyle : {}),\r\n//       ...(isDragAccept ? acceptStyle : {}),\r\n//       ...(isDragReject ? rejectStyle : {})\r\n//     }), [\r\n//       isDragActive,\r\n//       isDragReject,\r\n//       isDragAccept\r\n//     ]);\r\n  \r\n//     const thumbs = files.map(file => (\r\n//         <div style={thumb} key={file.name}>\r\n//           <div style={thumbInner}>\r\n//             <img\r\n//               src={file.preview}\r\n//               style={img}\r\n//             />\r\n//           </div>\r\n//         </div>\r\n//       ));\r\n    \r\n//       useEffect(() => () => {\r\n//         // Make sure to revoke the data uris to avoid memory leaks\r\n//         files.forEach(file => URL.revokeObjectURL(file.preview));\r\n//       }, [files]);\r\n\r\n//     const filespath = acceptedFiles.map(file => (\r\n//         <li key={file.path}>\r\n//           {file.path} - {file.size} bytes\r\n//         </li>\r\n//       ));\r\n\r\n//     return (\r\n//       <div className=\"container\">\r\n//         <div {...getRootProps({style})}>\r\n//           <input {...getInputProps()} />\r\n//           <p>Drag 'n' drop some files here</p>\r\n//           <button type=\"button\" onClick={open}>\r\n//           Open File Dialog\r\n//         </button>\r\n//         </div>\r\n//         <aside>\r\n//             <h4>Files </h4>\r\n//             <ul>{filespath}</ul>\r\n//         </aside>\r\n//         <aside style={thumbsContainer}>\r\n//         {thumbs}\r\n//       </aside>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   <ImageUpload />\r\nclass Image extends Component{\r\n  render(){\r\n    return(\r\n      <div>\r\n        <h3>{this.props.hocname}</h3>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UploadImage(ImageUpload);"]},"metadata":{},"sourceType":"module"}