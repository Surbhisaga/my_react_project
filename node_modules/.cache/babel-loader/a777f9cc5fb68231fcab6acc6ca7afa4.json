{"ast":null,"code":"var _jsxFileName = \"E:\\\\surbhi_office\\\\react_demo\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; //1.data show 2 types: \n//data render with the help of jsx\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: \"Hello World!\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 17\n}, this), document.getElementById(\"root\")); //pure javascript create new element\n// var h1= document.createElement('h1');\n// h1.innerHTML = \"surbhi\"\n// document.getElementById(\"root\").appendChild(h1);\n//ReactDOM.render(kya dikhana hai,kaha dikhana hai,callback func);\n//jyare pn render method no user karo tyare its only take one single element\n//-> 2. render method in multiple jsx element use karava \n// ReactDOM.render(<div>\n//   <h1>Hello World!</h1>\n//   <p>THis is my first react project</p>\n//   <h2>jsx element</h2>\n//   </div>,\n//   document.getElementById(\"root\"));\n//->3. in react v16 its possible for render () to return an array of element \n\nReactDOM.render([/*#__PURE__*/_jsxDEV(\"h1\", {\n  children: \"Hello World! array\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 3\n}, this), /*#__PURE__*/_jsxDEV(\"p\", {\n  children: \"THis is my first react project array\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 3\n}, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n  children: \"jsx element array\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this)], document.getElementById(\"root\"));","map":{"version":3,"sources":["E:/surbhi_office/react_demo/src/index.js"],"names":["React","ReactDOM","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;AACA;;;AACAA,QAAQ,CAACC,MAAT,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB,EACEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADF,E,CAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAH,QAAQ,CAACC,MAAT,CACE,cACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHA,CADF,EAMEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//1.data show 2 types: \n//data render with the help of jsx\nReactDOM.render(<h1>Hello World!</h1>,\n  document.getElementById(\"root\"));\n\n//pure javascript create new element\n// var h1= document.createElement('h1');\n// h1.innerHTML = \"surbhi\"\n// document.getElementById(\"root\").appendChild(h1);\n\n//ReactDOM.render(kya dikhana hai,kaha dikhana hai,callback func);\n//jyare pn render method no user karo tyare its only take one single element\n\n//-> 2. render method in multiple jsx element use karava \n// ReactDOM.render(<div>\n//   <h1>Hello World!</h1>\n//   <p>THis is my first react project</p>\n//   <h2>jsx element</h2>\n//   </div>,\n//   document.getElementById(\"root\"));\n\n//->3. in react v16 its possible for render () to return an array of element \nReactDOM.render(\n  [\n  <h1>Hello World! array</h1>,\n  <p>THis is my first react project array</p>,\n  <h2>jsx element array</h2>\n],\n  document.getElementById(\"root\"));"]},"metadata":{},"sourceType":"module"}