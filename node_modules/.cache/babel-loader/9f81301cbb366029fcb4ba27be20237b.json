{"ast":null,"code":"var _jsxFileName = \"E:\\\\surbhi_office\\\\employee_crud\\\\src\\\\Components\\\\ImageUpload.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out'\n};\nconst activeStyle = {\n  borderColor: '#2196f3'\n};\nconst acceptStyle = {\n  borderColor: '#00e676'\n};\nconst rejectStyle = {\n  borderColor: '#ff1744'\n};\nconst thumbsContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: 16\n};\nconst thumb = {\n  display: 'inline-flex',\n  borderRadius: 2,\n  border: '1px solid #eaeaea',\n  marginBottom: 8,\n  marginRight: 8,\n  width: \"auto\",\n  height: 200,\n  padding: 4,\n  boxSizing: 'border-box'\n};\nconst thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden'\n};\nconst img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%'\n};\n\nfunction ImageUpload(props) {\n  _s();\n\n  const [files, setFiles] = useState([]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    acceptedFiles,\n    open\n  } = useDropzone({\n    accept: 'image/*',\n    noClick: true,\n    noKeyboard: true,\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    }\n  });\n  const style = useMemo(() => ({ ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [isDragActive, isDragReject, isDragAccept]);\n  const thumbs = files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: thumb,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: thumbInner,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: file.preview,\n        style: img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }, this)\n  }, file.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this));\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n  const filespath = acceptedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [file.path, \" - \", file.size, \" bytes\"]\n  }, file.path, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        style\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: open,\n        children: \"Open File Dialog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filespath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      style: thumbsContainer,\n      children: thumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ImageUpload, \"rm6gkhQssSrJNPsBO9CaDMA7op4=\", false, function () {\n  return [useDropzone];\n});\n\n_c = ImageUpload;\n\n/*#__PURE__*/\n_jsxDEV(ImageUpload, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 132,\n  columnNumber: 3\n}, this);\n\nexport default ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["E:/surbhi_office/employee_crud/src/Components/ImageUpload.jsx"],"names":["React","useMemo","useEffect","useState","useDropzone","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","thumbsContainer","flexWrap","marginTop","thumb","border","marginBottom","marginRight","width","height","boxSizing","thumbInner","minWidth","overflow","img","ImageUpload","props","files","setFiles","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","acceptedFiles","open","accept","noClick","noKeyboard","onDrop","map","file","Object","assign","preview","URL","createObjectURL","style","thumbs","name","forEach","revokeObjectURL","filespath","path","size"],"mappings":"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","sourcesContent":["import React , {useMemo,useEffect, useState} from \"react\";\r\nimport {useDropzone} from \"react-dropzone\";\r\n\r\nconst baseStyle = {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    borderWidth: 2,\r\n    borderRadius: 2,\r\n    borderColor: '#eeeeee',\r\n    borderStyle: 'dashed',\r\n    backgroundColor: '#fafafa',\r\n    color: '#bdbdbd',\r\n    outline: 'none',\r\n    transition: 'border .24s ease-in-out'\r\n  };\r\n  \r\n  const activeStyle = {\r\n    borderColor: '#2196f3'\r\n  };\r\n  \r\n  const acceptStyle = {\r\n    borderColor: '#00e676'\r\n  };\r\n  \r\n  const rejectStyle = {\r\n    borderColor: '#ff1744'\r\n  };\r\n  const thumbsContainer = {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    marginTop: 16\r\n  };\r\n  \r\n  const thumb = {\r\n    display: 'inline-flex',\r\n    borderRadius: 2,\r\n    border: '1px solid #eaeaea',\r\n    marginBottom: 8,\r\n    marginRight: 8,\r\n    width: \"auto\",\r\n    height: 200,\r\n    padding: 4,\r\n    boxSizing: 'border-box'\r\n  };\r\n  \r\n  const thumbInner = {\r\n    display: 'flex',\r\n    minWidth: 0,\r\n    overflow: 'hidden'\r\n  };\r\n  \r\n  const img = {\r\n    display: 'block',\r\n    width: 'auto',\r\n    height: '100%'\r\n  };\r\n  \r\n  function ImageUpload(props) {\r\n    const [files, setFiles] = useState([]); \r\n    const {\r\n      getRootProps,\r\n      getInputProps,\r\n      isDragActive,\r\n      isDragAccept,\r\n      isDragReject,\r\n      acceptedFiles,\r\n      open\r\n    } = useDropzone({accept: 'image/*',noClick: true, noKeyboard: true, \r\n        onDrop: acceptedFiles => {\r\n        setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n          preview: URL.createObjectURL(file)\r\n        })));\r\n      }});\r\n  \r\n    const style = useMemo(() => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {})\r\n    }), [\r\n      isDragActive,\r\n      isDragReject,\r\n      isDragAccept\r\n    ]);\r\n  \r\n    const thumbs = files.map(file => (\r\n        <div style={thumb} key={file.name}>\r\n          <div style={thumbInner}>\r\n            <img\r\n              src={file.preview}\r\n              style={img}\r\n            />\r\n          </div>\r\n        </div>\r\n      ));\r\n    \r\n      useEffect(() => () => {\r\n        // Make sure to revoke the data uris to avoid memory leaks\r\n        files.forEach(file => URL.revokeObjectURL(file.preview));\r\n      }, [files]);\r\n\r\n    const filespath = acceptedFiles.map(file => (\r\n        <li key={file.path}>\r\n          {file.path} - {file.size} bytes\r\n        </li>\r\n      ));\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div {...getRootProps({style})}>\r\n          <input {...getInputProps()} />\r\n          <p>Drag 'n' drop some files here</p>\r\n          <button type=\"button\" onClick={open}>\r\n          Open File Dialog\r\n        </button>\r\n        </div>\r\n        <aside>\r\n            <h4>Files</h4>\r\n            <ul>{filespath}</ul>\r\n        </aside>\r\n        <aside style={thumbsContainer}>\r\n        {thumbs}\r\n      </aside>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  <ImageUpload />\r\nexport default ImageUpload;"]},"metadata":{},"sourceType":"module"}