{"ast":null,"code":"var _jsxFileName = \"E:\\\\surbhi_office\\\\react_demo\\\\src\\\\component\\\\Multipleinputs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MultipleInputs = () => {\n  _s();\n\n  const [userRegistration, setUserRegistration] = useState({\n    username: \"\",\n    email: \"\",\n    phone: \"\",\n    password: \"\"\n  });\n  const [records, setRecords] = useState([]);\n\n  const handleInput = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    console.log(name, value);\n    setUserRegistration({ ...userRegistration,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newRecoer = { ...userRegistration,\n      id: new Date().getTime().toString()\n    };\n    console.log(records);\n    setRecords([...records, newRecoer]);\n    console.log(records);\n    setUserRegistration({\n      username: \"\",\n      email: \"\",\n      phone: \"\",\n      password: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          autoComplete: \"off\",\n          value: userRegistration.username,\n          onChange: handleInput,\n          name: \"username\",\n          id: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          autoComplete: \"off\",\n          value: userRegistration.email,\n          onChange: handleInput,\n          name: \"email\",\n          id: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phone\",\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          autoComplete: \"off\",\n          value: userRegistration.phone,\n          onChange: handleInput,\n          name: \"phone\",\n          id: \"phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          autoComplete: \"off\",\n          value: userRegistration.password,\n          onChange: handleInput,\n          name: \"password\",\n          id: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: \"margin-top:10px\",\n      children: records.map(curElem => {\n        const {\n          id,\n          username,\n          email,\n          phone,\n          password\n        } = curElem;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showDataStyle\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: curElem.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: curElem.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: curElem.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: curElem.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, curElem.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MultipleInputs, \"gkquwSppOFERWhYYj7R17SSd9do=\");\n\n_c = MultipleInputs;\nexport default MultipleInputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleInputs\");","map":{"version":3,"sources":["E:/surbhi_office/react_demo/src/component/Multipleinputs.js"],"names":["React","useState","MultipleInputs","userRegistration","setUserRegistration","username","email","phone","password","records","setRecords","handleInput","e","name","target","value","console","log","handleSubmit","preventDefault","newRecoer","id","Date","getTime","toString","map","curElem"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst MultipleInputs = () => {\r\n\r\n    const [userRegistration , setUserRegistration] = useState({\r\n        username:\"\",\r\n        email:\"\",\r\n        phone:\"\",\r\n        password:\"\"\r\n    });\r\n\r\n    const [records , setRecords] =useState([]);\r\n\r\n    const handleInput = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        console.log(name,value);\r\n\r\n        setUserRegistration({ ...userRegistration , [name]:value })\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newRecoer = { ...userRegistration, id:new Date().getTime().toString() }\r\n        console.log(records);\r\n        setRecords([ ...records , newRecoer]);\r\n        console.log(records);\r\n\r\n        setUserRegistration({ username: \"\", email: \"\", phone:\"\",password:\"\"}); \r\n    }\r\n\r\n    return(\r\n       <>\r\n       <form action=\"\" onSubmit={handleSubmit}>\r\n           <div>\r\n               <label htmlFor=\"username\">Full Name</label>\r\n               <input type=\"text\" autoComplete=\"off\" value={userRegistration.username} onChange={handleInput} name=\"username\" id=\"username\"/>\r\n            </div>\r\n            <div>\r\n               <label htmlFor=\"email\">Email</label>\r\n               <input type=\"text\" autoComplete=\"off\" value={userRegistration.email} onChange={handleInput} name=\"email\" id=\"email\"/>\r\n            </div>\r\n            <div>\r\n               <label htmlFor=\"phone\">Phone</label>\r\n               <input type=\"text\" autoComplete=\"off\" value={userRegistration.phone} onChange={handleInput} name=\"phone\" id=\"phone\"/>\r\n            </div>\r\n            <div>\r\n               <label htmlFor=\"password\">Password</label>\r\n               <input type=\"password\" autoComplete=\"off\" value={userRegistration.password} onChange={handleInput} name=\"password\" id=\"password\"/>\r\n            </div>\r\n            \r\n            <button type=\"submit\">Register</button> \r\n          \r\n       </form>\r\n       <div style=\"margin-top:10px\">\r\n           {\r\n               records.map((curElem) => {\r\n                   const { id,username,email,phone,password } = curElem;\r\n                   return(\r\n                       <div className=\"showDataStyle\" key={curElem.id}>\r\n                            <p>{curElem.username}</p>\r\n                            <p>{curElem.email}</p>\r\n                            <p>{curElem.phone}</p>\r\n                            <p>{curElem.password}</p>\r\n                       </div>\r\n                   )\r\n                })\r\n            }\r\n       </div>\r\n       </>\r\n    )\r\n};\r\n\r\nexport default MultipleInputs;"]},"metadata":{},"sourceType":"module"}