{"ast":null,"code":"var _jsxFileName = \"E:\\\\surbhi_office\\\\employee_crud\\\\src\\\\Components\\\\ImageUpload.jsx\",\n    _s = $RefreshSig$();\n\n// import React , {useMemo} from \"react\";\n// import {useDropzone} from \"react-dropzone\";\n// const baseStyle = {\n//     flex: 1,\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     padding: '20px',\n//     borderWidth: 2,\n//     borderRadius: 2,\n//     borderColor: '#eeeeee',\n//     borderStyle: 'dashed',\n//     backgroundColor: '#fafafa',\n//     color: '#bdbdbd',\n//     outline: 'none',\n//     transition: 'border .24s ease-in-out'\n//   };\n//   const activeStyle = {\n//     borderColor: '#2196f3'\n//   };\n//   const acceptStyle = {\n//     borderColor: '#00e676'\n//   };\n//   const rejectStyle = {\n//     borderColor: '#ff1744'\n//   };\n//   function ImageUpload(props) {\n//     const {\n//       getRootProps,\n//       getInputProps,\n//       isDragActive,\n//       isDragAccept,\n//       isDragReject,\n//       acceptedFiles,\n//       open\n//     } = useDropzone({accept: 'image/*',noClick: true, noKeyboard: true});\n//     const style = useMemo(() => ({\n//       ...baseStyle,\n//       ...(isDragActive ? activeStyle : {}),\n//       ...(isDragAccept ? acceptStyle : {}),\n//       ...(isDragReject ? rejectStyle : {})\n//     }), [\n//       isDragActive,\n//       isDragReject,\n//       isDragAccept\n//     ]);\n//     const files = acceptedFiles.map(file => (\n//         <li key={file.path}>\n//           {file.path} - {file.size} bytes\n//         </li>\n//       ));\n//     return (\n//       <div className=\"container\">\n//         <div {...getRootProps({style})}>\n//           <input {...getInputProps()} />\n//           <p>Drag 'n' drop some files here</p>\n//           <button type=\"button\" onClick={open}>\n//           Open File Dialog\n//         </button>\n//         </div>\n//         <aside>\n//             <h4>Files</h4>\n//             <ul>{files}</ul>\n//         </aside>\n//       </div>\n//     );\n//   }\n//   <ImageUpload />\nimport React, { useEffect, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst thumbsContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: 16\n};\nconst thumb = {\n  display: 'inline-flex',\n  borderRadius: 2,\n  border: '1px solid #eaeaea',\n  marginBottom: 8,\n  marginRight: 8,\n  width: 100,\n  height: 100,\n  padding: 4,\n  boxSizing: 'border-box'\n};\nconst thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden'\n};\nconst img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%'\n};\n\nfunction ImageUpload(props) {\n  _s();\n\n  const [files, setFiles] = useState([]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: 'image/*',\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    }\n  });\n  const thumbs = files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: thumb,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: thumbInner,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: file.preview,\n        style: img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, file.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this));\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        className: 'dropzone'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      style: thumbsContainer,\n      children: thumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImageUpload, \"HtUHmGo3hwDZKSmIKg3riAANKQ4=\", false, function () {\n  return [useDropzone];\n});\n\n_c = ImageUpload;\n\n/*#__PURE__*/\n_jsxDEV(ImageUpload, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 154,\n  columnNumber: 1\n}, this);\n\nexport default ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["E:/surbhi_office/employee_crud/src/Components/ImageUpload.jsx"],"names":["React","useEffect","useState","useDropzone","thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","width","height","padding","boxSizing","thumbInner","minWidth","overflow","img","ImageUpload","props","files","setFiles","getRootProps","getInputProps","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","thumbs","name","forEach","revokeObjectURL","className"],"mappings":"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","sourcesContent":["// import React , {useMemo} from \"react\";\r\n// import {useDropzone} from \"react-dropzone\";\r\n\r\n// const baseStyle = {\r\n//     flex: 1,\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//     alignItems: 'center',\r\n//     padding: '20px',\r\n//     borderWidth: 2,\r\n//     borderRadius: 2,\r\n//     borderColor: '#eeeeee',\r\n//     borderStyle: 'dashed',\r\n//     backgroundColor: '#fafafa',\r\n//     color: '#bdbdbd',\r\n//     outline: 'none',\r\n//     transition: 'border .24s ease-in-out'\r\n//   };\r\n  \r\n//   const activeStyle = {\r\n//     borderColor: '#2196f3'\r\n//   };\r\n  \r\n//   const acceptStyle = {\r\n//     borderColor: '#00e676'\r\n//   };\r\n  \r\n//   const rejectStyle = {\r\n//     borderColor: '#ff1744'\r\n//   };\r\n  \r\n//   function ImageUpload(props) {\r\n//     const {\r\n//       getRootProps,\r\n//       getInputProps,\r\n//       isDragActive,\r\n//       isDragAccept,\r\n//       isDragReject,\r\n//       acceptedFiles,\r\n//       open\r\n//     } = useDropzone({accept: 'image/*',noClick: true, noKeyboard: true});\r\n  \r\n//     const style = useMemo(() => ({\r\n//       ...baseStyle,\r\n//       ...(isDragActive ? activeStyle : {}),\r\n//       ...(isDragAccept ? acceptStyle : {}),\r\n//       ...(isDragReject ? rejectStyle : {})\r\n//     }), [\r\n//       isDragActive,\r\n//       isDragReject,\r\n//       isDragAccept\r\n//     ]);\r\n  \r\n//     const files = acceptedFiles.map(file => (\r\n//         <li key={file.path}>\r\n//           {file.path} - {file.size} bytes\r\n//         </li>\r\n//       ));\r\n\r\n//     return (\r\n//       <div className=\"container\">\r\n//         <div {...getRootProps({style})}>\r\n//           <input {...getInputProps()} />\r\n//           <p>Drag 'n' drop some files here</p>\r\n//           <button type=\"button\" onClick={open}>\r\n//           Open File Dialog\r\n//         </button>\r\n//         </div>\r\n//         <aside>\r\n//             <h4>Files</h4>\r\n//             <ul>{files}</ul>\r\n//         </aside>\r\n//       </div>\r\n//     );\r\n//   }\r\n  \r\n//   <ImageUpload />\r\n\r\nimport React, {useEffect, useState} from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\n\r\nconst thumbsContainer = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  flexWrap: 'wrap',\r\n  marginTop: 16\r\n};\r\n\r\nconst thumb = {\r\n  display: 'inline-flex',\r\n  borderRadius: 2,\r\n  border: '1px solid #eaeaea',\r\n  marginBottom: 8,\r\n  marginRight: 8,\r\n  width: 100,\r\n  height: 100,\r\n  padding: 4,\r\n  boxSizing: 'border-box'\r\n};\r\n\r\nconst thumbInner = {\r\n  display: 'flex',\r\n  minWidth: 0,\r\n  overflow: 'hidden'\r\n};\r\n\r\nconst img = {\r\n  display: 'block',\r\n  width: 'auto',\r\n  height: '100%'\r\n};\r\n\r\n\r\nfunction ImageUpload(props) {\r\n  const [files, setFiles] = useState([]);\r\n  const {getRootProps, getInputProps} = useDropzone({\r\n    accept: 'image/*',\r\n    onDrop: acceptedFiles => {\r\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n        preview: URL.createObjectURL(file)\r\n      })));\r\n    }\r\n  });\r\n  \r\n  const thumbs = files.map(file => (\r\n    <div style={thumb} key={file.name}>\r\n      <div style={thumbInner}>\r\n        <img\r\n          src={file.preview}\r\n          style={img}\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  useEffect(() => () => {\r\n    // Make sure to revoke the data uris to avoid memory leaks\r\n    files.forEach(file => URL.revokeObjectURL(file.preview));\r\n  }, [files]);\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <div {...getRootProps({className: 'dropzone'})}>\r\n        <input {...getInputProps()} />\r\n        <p>Drag 'n' drop some files here, or click to select files</p>\r\n      </div>\r\n      <aside style={thumbsContainer}>\r\n        {thumbs}\r\n      </aside>\r\n    </section>\r\n  );\r\n}\r\n\r\n<ImageUpload />\r\n\r\nexport default ImageUpload;"]},"metadata":{},"sourceType":"module"}